<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on Alberro.À£ ∏·∂ª</title>
    <link>https://alberro.xyz/categories/javascript/index.xml</link>
    <description>Recent content in Javascript on Alberro.À£ ∏·∂ª</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-AR</language>
    <copyright>Todos los derechos reservados - 2017</copyright>
    <atom:link href="https://alberro.xyz/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Generar microservicios de administraci√≥n con Lumber</title>
      <link>https://alberro.xyz/generar-microservicios-de-administracion-con-lumber/</link>
      <pubDate>Sun, 27 Nov 2016 18:11:11 +0000</pubDate>
      
      <guid>https://alberro.xyz/generar-microservicios-de-administracion-con-lumber/</guid>
      <description>&lt;p&gt;Lumber es una herramienta open source que funciona sobre NodeJS para generar microservicios de administraci√≥n. Nos da como resultado un REST API conectado directamente a una base de datos.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Lumber genera una aplicaci√≥n web que sirve una API REST conectada directamente a su base de datos, por lo que funciona de forma ininterrumpida para motores como MySQL y Postgres.&lt;/p&gt;

&lt;p&gt;Su funcionalidad es muy sencilla ya que se realiza todo a trav√©s de un par de preguntas al momento de correr Lumber. Con solo responder con algunos par√°metros de configuraci√≥n, ya autom√°ticamente Lumber nos genera todo el c√≥digo de la aplicaci√≥n.&lt;/p&gt;

&lt;p&gt;Por el momento solo funciona con bases de datos MySQL y Postgre pero tienen pensando aumentar la compatibilidad y soportar las DBs m√°s populares del momento. Como punto negativo, no hay novedades si van a soportar bases NoSQL como MongoDB por lo que habr√° que esperar hasta recibir una informaci√≥n oficial&amp;#8230;&lt;/p&gt;

&lt;p&gt;&lt;span class=&#34;embed-youtube&#34; style=&#34;text-align:center; display: block;&#34;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.forestadmin.com/lumber&#34;&gt;M√°s informaci√≥n&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>¬øC√≥mo aumentar la performance de AngularJS?</title>
      <link>https://alberro.xyz/como-aumentar-la-performance-de-angularjs/</link>
      <pubDate>Sun, 12 Jul 2015 22:18:05 +0000</pubDate>
      
      <guid>https://alberro.xyz/como-aumentar-la-performance-de-angularjs/</guid>
      <description>&lt;p style=&#34;text-align: justify;&#34;&gt;
  El &lt;em&gt;framework&lt;/em&gt; de desarrollo &lt;strong&gt;AngularJS &lt;/strong&gt;ha tenido varias quejas con respecto a la performance de las aplicaciones desarrolladas con √©l. A continuaci√≥n veremos¬†algunos tips para mejorar la velocidad y el consumo de memoria con solo hacer algunos cambios ligeros o solo agregando un par de l√≠neas.
&lt;/p&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
  
&lt;/p&gt;

&lt;h2 style=&#34;text-align: justify;&#34;&gt;
  1. Data Binding
&lt;/h2&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
  Uno de los grandes problemas de &lt;strong&gt;AngularJS&lt;/strong&gt; es el &lt;em&gt;2-way data binding¬†&lt;/em&gt;innecesario, es decir tener un &lt;em&gt;watcher&lt;/em&gt; que est√° continuamente escuchando por cambios. Si no necesitamos de esta funcionalidad, podemos aplicar lo siguiente para evitar ese consumo¬†indeseado
&lt;/p&gt;

&lt;h3 style=&#34;text-align: justify;&#34;&gt;
  Angular 1.2
&lt;/h3&gt;

&lt;pre class=&#34;theme:monokai font:consolas lang:js decode:true&#34; title=&#34;BindOnce directive&#34;&gt;app.directive(&#39;bindOnce&#39;, function($scope, $timeout) {
    return {
        scope: true,
        link: function( $scope ) {
            $timeout(function() {
                $scope.$destroy();
            }, 0);
        }
    }
});&lt;/pre&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
  Y luego en nuestro c√≥digo directamente llamamos a esa directiva
&lt;/p&gt;

&lt;pre class=&#34;theme:monokai font:consolas lang:default decode:true&#34; title=&#34;Angular 1.2&#34;&gt;&amp;lt;div class=&#34;my-class&#34; bind-once&amp;gt;{{myValue}}&amp;lt;/div&amp;gt;
&amp;lt;div class=&#34;other-class&#34; ng-bind=&#34;anotherValue&#34; bind-once&amp;gt;&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;h3 id=&#34;angular-1-3&#34;&gt;Angular 1.3&lt;/h3&gt;

&lt;pre class=&#34;theme:monokai font:consolas lang:default decode:true &#34; title=&#34;Angular 1.3&#34;&gt;&amp;lt;div class=&#34;my-class&#34;&amp;gt;{{::myValue}}&amp;lt;/div&amp;gt;&lt;/pre&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
  En &lt;em&gt;Angular 1.3&lt;/em&gt; ya se dieron cuenta de este problema e implementaron la funcionalidad de los dobles dos puntos (::).
&lt;/p&gt;

&lt;h2 id=&#34;2-debuginfo&#34;&gt;2. DebugInfo&lt;/h2&gt;

&lt;p&gt;Otra mejora que se puede realizar, sin importar la versi√≥n de &lt;em&gt;Angular&lt;/em&gt;, es la de deshabilitar el &lt;em&gt;debugInfo&lt;/em&gt; dentro del &lt;em&gt;$compileProvider&lt;/em&gt;. Solo deber√≠an modificar el sitio de desarrollo, que en este caso us√© &lt;em&gt;mysite.dev&lt;/em&gt; y listo.&lt;/p&gt;

&lt;pre class=&#34;theme:monokai font:consolas lang:default decode:true&#34; title=&#34;CompileProvider&#34;&gt;app.config(function($compileProvider) {
  if (!location.host.match(/mysite.dev/)) {
    $compileProvider.debugInfoEnabled(false);
  }
});&lt;/pre&gt;

&lt;h2 id=&#34;3-ng-repeat&#34;&gt;3. ng-repeat&lt;/h2&gt;

&lt;p&gt;Otra mejora significativa est√° en el uso de &lt;em&gt;ng-repeat&lt;/em&gt; seguido de &lt;em&gt;track&lt;/em&gt;, algo¬†como&lt;/p&gt;

&lt;pre class=&#34;theme:monokai font:consolas lang:default decode:true &#34; title=&#34;Track by&#34;&gt;&amp;lt;ul class=&#34;my-list&#34; ng-repeat=&#34;user in users track by $index&#34;&amp;gt;
  &amp;lt;li&amp;gt;{{::user.name}}&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;&lt;/pre&gt;

&lt;p&gt;Agregar el &lt;em&gt;track by&lt;/em&gt; a un &lt;em&gt;ng-repeat&lt;/em&gt; incrementa &lt;strong&gt;notablemente&lt;/strong&gt; la velocidad dentro del &lt;em&gt;loop&lt;/em&gt; en¬†los elementos de una colecci√≥n, sin importar si usan o no el &lt;em&gt;$index&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;4-watchcollection-vs-watch&#34;&gt;4. $watchCollection vs. $watch&lt;/h2&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
  El uso de &lt;em&gt;$watchCollection&lt;/em&gt; en vez de &lt;em&gt;$watch&lt;/em&gt; es m√°s performante ya que el segundo realiza, con un tercer par√°metro, la¬†comprobaci√≥n de los objetos en todos los niveles mientras que el primero¬†no.
&lt;/p&gt;

&lt;pre class=&#34;theme:monokai font:consolas lang:default decode:true&#34; title=&#34;WatchCollection&#34;&gt;$scope.$watchCollection(&#34;collection&#34;, function( newValue, oldValue ) {
  console.log(newValue, oldValue);
});&lt;/pre&gt;

&lt;h2 id=&#34;5-ng-if-vs-ng-show&#34;&gt;5. ng-if vs. ng-show&lt;/h2&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
  Si vamos a realizar comprobaciones en el &lt;em&gt;DOM&lt;/em&gt; en donde sacamos¬†c√≥digo en base a diferentes variables, es mejor usar &lt;em&gt;ng-if&lt;/em&gt; ya que directamente elimina el &lt;em&gt;DOM&lt;/em&gt; mientras que &lt;em&gt;ng-show&lt;/em&gt; solo muestra u oculta el contenido, pero el c√≥digo sigue estando haciendo nuestra app m√°s pesada.
&lt;/p&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
  Para poder comprobar si hemos mejorado o no nuestra aplicaci√≥n, podemos usar la extensi√≥n &lt;a href=&#34;https://chrome.google.com/webstore/detail/angularjs-batarang-stable/niopocochgahfkiccpjmmpchncjoapek&#34; target=&#34;_blank&#34;&gt;Batarang&lt;/a&gt; en Chrome o directamente definir &lt;em&gt;timers&lt;/em&gt; usando &lt;em&gt;console&lt;/em&gt;
&lt;/p&gt;

&lt;pre class=&#34;theme:monokai font:consolas lang:default decode:true &#34; title=&#34;Timers&#34;&gt;console.time(&#34;procesoVentas&#34;);
$timeout(function(){
    console.timeEnd(&#34;procesoVentas&#34;);
}, 500);

// Resultado por consola $: procesoVentas: 500.611ms&lt;/pre&gt;

&lt;p&gt;Con todos estos tips, tu aplicaci√≥n deber√≠a estar funcionando mucho m√°s r√°pido que antes¬†üôÇ&lt;/p&gt;

&lt;h3 style=&#34;text-align: center;&#34;&gt;
  &lt;span style=&#34;color: #3366ff;&#34;&gt;¬øAlguna sugerencia para mejorar la perfomance?&lt;/span&gt;
&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>Sitecake ‚Äì CMS para crear sitios est√°ticos</title>
      <link>https://alberro.xyz/sitecake-cms-para-crear-sitios-estaticos/</link>
      <pubDate>Sun, 21 Jun 2015 22:35:27 +0000</pubDate>
      
      <guid>https://alberro.xyz/sitecake-cms-para-crear-sitios-estaticos/</guid>
      <description>&lt;p style=&#34;text-align: justify;&#34;&gt;
  &lt;strong&gt;Sitecake¬†&lt;/strong&gt;es un gestor de contenidos, &lt;em&gt;Content Management System&lt;/em&gt; en ingl√©s, que permite crear y administrar p√°ginas webs est√°ticas, sin necesidad de utilizar una base de datos para almacenar los posts. Soporta todos los frameworks m√°s conocidos del mercado como &lt;em&gt;Bootstrap&lt;/em&gt;, &lt;em&gt;Foundation&lt;/em&gt; y &lt;em&gt;HTML5 Boilerplate&lt;/em&gt;, entre otros.
&lt;/p&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
  
&lt;/p&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
  Algunas de las ventajas de¬†&lt;em&gt;Sitecake&lt;/em&gt;
&lt;/p&gt;

&lt;p&gt;&lt;li style=&#34;text-align: justify;&#34;&gt;
  Dise√±ador visual mediante &lt;em&gt;Drag &amp;amp; drop&lt;/em&gt;
&lt;/li&gt;
&lt;li style=&#34;text-align: justify;&#34;&gt;
  Trabaja con HTML plano, no necesita de un servidor para procesar
&lt;/li&gt;
&lt;li style=&#34;text-align: justify;&#34;&gt;
  No requiere base de datos
&lt;/li&gt;
&lt;li style=&#34;text-align: justify;&#34;&gt;
  Y es OpenSource üòÄ
&lt;/li&gt;&lt;/p&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
  Ac√° pueden ingresar a un &lt;a href=&#34;http://sitecake.com/demo&#34;&gt;demo&lt;/a&gt; online con la contrase√±a &lt;strong&gt;&lt;em&gt;admin&lt;/em&gt;&lt;/strong&gt;.¬†Es bien sencillo, ideal para almacenar sitios est√°ticos en Github pages, por ejemplo.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>¬øEst√°s preparado para aprender Javascript?</title>
      <link>https://alberro.xyz/estas-preparado-para-aprender-javascript/</link>
      <pubDate>Thu, 18 Jun 2015 21:42:29 +0000</pubDate>
      
      <guid>https://alberro.xyz/estas-preparado-para-aprender-javascript/</guid>
      <description>&lt;p style=&#34;text-align: justify;&#34;&gt;
  Javascript ha ganado much√≠simo terreno en estos √∫ltimos a√±os y es un lenguaje de scripting que nunca para de evolucionar y mejorar. Recientemente se aprob√≥ el &lt;a href=&#34;http://www.ecma-international.org/ecma-262/6.0/&#34; target=&#34;_blank&#34;&gt;ECMAScript 6&lt;/a&gt; que trae much√≠simas mejoras al lenguaje y ahora pod√©s aprenderlas online gratis, ¬øest√°s preparado?
&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
  Javascript.com es un sitio desarrollado por el equipo de¬†Code¬†School, famosos por hacer recursos &lt;em&gt;online&lt;/em&gt; para aprendizaje de lenguajes de programaci√≥n. Si bien el sitio arranca desde un nivel muy inicial, va a escalando de a poco que hasta los m√°s experimentados se van a ver sorprendidos con las cosas que explica.
&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://alberro.xyz/images/2015/06/2015-06-18_18-27-38.png&#34;&gt;&lt;img class=&#34;alignnone wp-image-35 size-full&#34; src=&#34;https://alberro.xyz/images/2015/06/2015-06-18_18-27-38.png&#34; alt=&#34;2015-06-18_18-27-38&#34; width=&#34;1366&#34; height=&#34;426&#34; /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>